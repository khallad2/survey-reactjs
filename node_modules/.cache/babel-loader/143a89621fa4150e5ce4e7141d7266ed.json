{"ast":null,"code":"import _classCallCheck from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/src/components/SingleQuestion.js\";\nimport React, { Component } from 'react';\nimport { MDBInput } from \"mdbreact\";\nimport '../styles/question-board.css';\n\nvar SingleQuestion =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SingleQuestion, _Component);\n\n  function SingleQuestion(props) {\n    var _this;\n\n    _classCallCheck(this, SingleQuestion);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SingleQuestion).call(this, props));\n    _this.state = {\n      description: '',\n      formActivePanel1: 0,\n      formActivePanel1Changed: false,\n      animationSwap: false,\n      selectedIndex: 0,\n      selectedQuestion: {},\n      allQuestCount: 0\n    };\n\n    _this.calculateAutofocus = function (a) {\n      if (_this.state['formActivePanel' + a + 'Changed']) {\n        return true;\n      }\n    };\n\n    _this.handleRadioChangeAndCheckboxChange = function (choiceIndex) {\n      return function (event) {\n        var data = _this.state.selectedQuestion;\n        data.choices[choiceIndex].selected = event.target.checked;\n\n        _this.setState({\n          selectedQuestion: data\n        });\n      };\n    };\n\n    _this.handleTextInputChange = function (event) {\n      var data = _this.state.selectedQuestion;\n      data.description = event.target.value;\n\n      _this.setState({\n        selectedQuestion: data\n      });\n    };\n\n    _this.state.selectedQuestion = _this.props.selectedQuestion;\n    _this.state.selectedIndex = _this.props.selectedIndex;\n    _this.state.formActivePanel1 = _this.props.formActivePanel1;\n    _this.state.allQuestCount = _this.props.allQuestCount;\n    _this.handleTextInputChange = _this.handleTextInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRadioChangeAndCheckboxChange = _this.handleRadioChangeAndCheckboxChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\n   * Calculate value of ActivePanel for AutoFocus\n   **/\n\n\n  _createClass(SingleQuestion, [{\n    key: \"render\",\n\n    /**\n     * Lifecycle Hock to render page\n     **/\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.selectedQuestion['question_type'] === 'multiple-choice' && this.state.selectedQuestion['multiple'] === 'false' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.selectedQuestion['choices'].length > 0 && React.createElement(\"div\", {\n        className: 'choices',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, this.state.selectedQuestion['choices'].map(function (choice, indexChoice) {\n        return React.createElement(\"div\", {\n          className: \" form-check-inline\",\n          key: indexChoice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: 'MDBInput-button-label',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"align-self-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(MDBInput, {\n          label: choice.label,\n          type: 'radio',\n          className: \"row\",\n          name: 'choice',\n          value: choice.value,\n          required: _this2.state.selectedQuestion.required,\n          defaultChecked: choice.selected // defaultChecked={this.state.answers[this.state.selectedIndex].selected}\n          ,\n          onChange: _this2.handleRadioChangeAndCheckboxChange(indexChoice),\n          autoFocus: _this2.calculateAutofocus(indexChoice),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"required field \", React.createElement(\"i\", {\n          className: \"far fa-frown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }))))))));\n      }))), this.state.selectedQuestion['question_type'] === 'multiple-choice' && this.state.selectedQuestion['multiple'] === 'true' && React.createElement(\"div\", {\n        className: 'flex-center',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.selectedQuestion['choices'].length > 0 && React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.state.selectedQuestion['choices'].map(function (choice, indexChoice) {\n        return React.createElement(\"div\", {\n          id: 'MDBInput-button-label',\n          className: \"form-check form-check-inline\",\n          key: indexChoice,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"align-self-center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        }, React.createElement(MDBInput, {\n          label: choice.label,\n          type: \"checkbox\",\n          value: choice.value,\n          defaultChecked: choice.selected,\n          className: \"row\",\n          required: _this2.state.selectedQuestion.required,\n          onChange: _this2.handleRadioChangeAndCheckboxChange(indexChoice),\n          autoFocus: _this2.calculateAutofocus(indexChoice),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"invalid-feedback\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, \"required field \", React.createElement(\"i\", {\n          className: \"far fa-frown\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        })))));\n      }))), this.state.selectedQuestion['question_type'] === 'text' && (this.state.selectedQuestion['multiline'] === 'false' || this.state.selectedQuestion['multiline'] === undefined) && React.createElement(\"div\", {\n        id: 'MDBInput-text-label',\n        className: \"form-check form-check-inline\",\n        key: this.state.selectedIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(MDBInput, {\n        id: \"text-input\",\n        label: \"Write what's in your mind\",\n        className: \"row align-self-center\",\n        value: this.state.selectedQuestion.description,\n        onChange: this.handleTextInputChange,\n        required: this.state.selectedQuestion.required,\n        autoFocus: this.calculateAutofocus(this.state.selectedIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"required\"))), this.state.selectedQuestion.question_type === 'text' && this.state.selectedQuestion.multiline === 'true' && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"form-control rounded-0\",\n        onChange: this.handleTextInputChange,\n        value: this.state.selectedQuestion.description,\n        required: this.state.selectedQuestion.required,\n        id: \"exampleFormControlTextarea2\",\n        rows: \"3\",\n        autoFocus: this.calculateAutofocus(this.state.selectedIndex),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"invalid-feedback\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"required field \", React.createElement(\"i\", {\n        className: \"far fa-frown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return SingleQuestion;\n}(Component);\n\nexport default SingleQuestion;","map":{"version":3,"sources":["/Users/khallad/Downloads/work space/Reactjs/survey-reactjs/src/components/SingleQuestion.js"],"names":["React","Component","MDBInput","SingleQuestion","props","state","description","formActivePanel1","formActivePanel1Changed","animationSwap","selectedIndex","selectedQuestion","allQuestCount","calculateAutofocus","a","handleRadioChangeAndCheckboxChange","choiceIndex","event","data","choices","selected","target","checked","setState","handleTextInputChange","value","bind","length","map","choice","indexChoice","label","required","undefined","question_type","multiline"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {MDBInput} from \"mdbreact\";\nimport '../styles/question-board.css';\n\nclass SingleQuestion extends Component {\n\n    state = {\n        description: '',\n        formActivePanel1: 0,\n        formActivePanel1Changed: false,\n        animationSwap: false,\n        selectedIndex: 0,\n        selectedQuestion: {},\n        allQuestCount: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.state.selectedQuestion = this.props.selectedQuestion;\n        this.state.selectedIndex = this.props.selectedIndex;\n        this.state.formActivePanel1 = this.props.formActivePanel1;\n        this.state.allQuestCount = this.props.allQuestCount;\n        this.handleTextInputChange = this.handleTextInputChange.bind(this);\n        this.handleRadioChangeAndCheckboxChange = this.handleRadioChangeAndCheckboxChange.bind(this);\n    }\n\n    /**\n     * Calculate value of ActivePanel for AutoFocus\n     **/\n    calculateAutofocus = (a) => {\n        if (this.state['formActivePanel' + a + 'Changed']) {\n            return true;\n        }\n    };\n\n    /**\n     * Handles data change in Radio Buttons\n     * @param choiceIndex\n     * @returns {function(*)}\n     */\n    handleRadioChangeAndCheckboxChange = (choiceIndex) => (event)=> {\n        let data = this.state.selectedQuestion;\n        data.choices[choiceIndex].selected = event.target.checked;\n        this.setState({\n            selectedQuestion: data\n        });\n    };\n\n    /**\n     * Handles data change in Text input\n     * @param event\n     */\n    handleTextInputChange =  (event) => {\n        let data = this.state.selectedQuestion;\n        data.description = event.target.value;\n        this.setState({\n            selectedQuestion: data\n        });\n    };\n\n    /**\n     * Lifecycle Hock to render page\n     **/\n    render() {\n        return (\n            <div>\n                {this.state.selectedQuestion['question_type'] === 'multiple-choice' && this.state.selectedQuestion['multiple'] === 'false' && (\n                    <div>\n                        {this.state.selectedQuestion['choices'].length > 0 && (\n                            <div className={'choices'}>\n                                {this.state.selectedQuestion['choices'].map((choice, indexChoice) => {\n                                    return (\n                                        <div className=\" form-check-inline\"\n                                             key={indexChoice}>\n                                            <div id={'MDBInput-button-label'}>\n                                                <ul>\n                                                    <div\n                                                        className=\"align-self-center\">\n                                                        <strong>\n                                                            <div>\n                                                                    <MDBInput\n                                                                    label={choice.label}\n                                                                    type={'radio'}\n                                                                    className=\"row\"\n                                                                    name={'choice'}\n                                                                    value={choice.value}\n                                                                    required={this.state.selectedQuestion.required}\n                                                                    defaultChecked={choice.selected}\n                                                                    // defaultChecked={this.state.answers[this.state.selectedIndex].selected}\n                                                                    onChange={this.handleRadioChangeAndCheckboxChange(indexChoice)}\n                                                                    autoFocus={this.calculateAutofocus(indexChoice)}/>\n                                                                <div className=\"invalid-feedback\">\n                                                                    required field <i className=\"far fa-frown\"></i>\n                                                                </div>\n                                                            </div>\n\n                                                        </strong>\n                                                    </div>\n                                                </ul>\n                                            </div>\n                                        </div>\n                                    )\n                                })}\n\n                            </div>)}\n                    </div>)}\n\n                {this.state.selectedQuestion['question_type'] === 'multiple-choice' && this.state.selectedQuestion['multiple'] === 'true' && (\n                    <div className={'flex-center'}>\n                        {this.state.selectedQuestion['choices'].length > 0 && (\n                            <div className=\"row\">\n                                {this.state.selectedQuestion['choices'].map((choice, indexChoice) => {\n                                    return (\n                                        <div id={'MDBInput-button-label'}\n                                             className=\"form-check form-check-inline\"\n                                             key={indexChoice}>\n                                            <ul>\n                                                <div className=\"align-self-center\">\n                                                    <strong><MDBInput\n                                                        label={choice.label}\n                                                        type=\"checkbox\"\n                                                        value={choice.value}\n                                                        defaultChecked={choice.selected}\n                                                        className=\"row\"\n                                                        required={this.state.selectedQuestion.required}\n                                                        onChange={this.handleRadioChangeAndCheckboxChange(indexChoice)}\n                                                        autoFocus={this.calculateAutofocus(indexChoice)}/></strong>\n                                                    <div className=\"invalid-feedback\">\n                                                        required field <i className=\"far fa-frown\"></i>\n                                                    </div>\n                                                </div>\n                                            </ul>\n                                        </div>\n                                    )\n                                })}\n\n                            </div>)}\n                    </div>)}\n\n                {this.state.selectedQuestion['question_type'] === 'text' && (this.state.selectedQuestion['multiline'] === 'false' || this.state.selectedQuestion['multiline'] === undefined) && (\n                    <div id={'MDBInput-text-label'}\n                         className=\"form-check form-check-inline\" key={this.state.selectedIndex}>\n                        <ul>\n                            <strong><MDBInput id=\"text-input\"\n                                              label=\"Write what's in your mind\"\n                                              className=\"row align-self-center\"\n                                              value={this.state.selectedQuestion.description}\n                                              onChange={this.handleTextInputChange}\n                                              required={this.state.selectedQuestion.required}\n                                              autoFocus={this.calculateAutofocus(this.state.selectedIndex)}/></strong>\n                            <div className=\"invalid-feedback\">\n                                required\n                            </div>\n                        </ul>\n                    </div>\n\n                )}\n                {(this.state.selectedQuestion.question_type === 'text' && this.state.selectedQuestion.multiline === 'true') && (\n                    <div>\n                      <textarea className=\"form-control rounded-0\" onChange={this.handleTextInputChange} value={this.state.selectedQuestion.description}\n                                required={this.state.selectedQuestion.required}\n                                id=\"exampleFormControlTextarea2\" rows=\"3\" autoFocus={this.calculateAutofocus(this.state.selectedIndex)}>\n                                                        </textarea>\n                        <div className=\"invalid-feedback\">\n                            required field <i className=\"far fa-frown\"></i>\n                        </div>\n                    </div>)}\n            </div>\n        );\n    };\n\n\n}\n\nexport default SingleQuestion;\n\n"]},"metadata":{},"sourceType":"module"}